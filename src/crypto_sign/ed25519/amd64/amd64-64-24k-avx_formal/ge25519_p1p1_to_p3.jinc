require "shared_const.jinc"
require "mul4.jinc"
require "mul5.jinc"

inline fn ge25519_p1p1_to_p3(stack u64[16] pp) -> stack u64[18]
	ensures #[prover=cas] {
  eqmod (
     \sum (ii \in 0:5) (pow(2, 64*ii)*u64i(result.0[ii])),
     (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[ii]))) * (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[12+ii]))),
     single((pow(2,255)) - 19)
    )
  }
	ensures #[prover=cas] {
  eqmod (
     \sum (ii \in 0:5) (pow(2, 64*ii)*u64i(result.0[5+ii])),
     (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[4+ii]))) * (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[8+ii]))),
     single((pow(2,255)) - 19)
    )
  }
	ensures #[prover=cas] {
  eqmod (
     \sum (ii \in 0:4) (pow(2, 64*ii)*u64i(result.0[10+ii])),
     (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[4+ii]))) * (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[12+ii]))),
     single((pow(2,255)) - 19)
    )
  }
  ensures #[prover=cas] {
  eqmod (
     \sum (ii \in 0:4) (pow(2, 64*ii)*u64i(result.0[14+ii])),
     (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[ii]))) * (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[8+ii]))),
     single((pow(2,255)) - 19)
    )
  }
{
	stack u64[18] r; 
	
	
	r[0:5] = __mul5_sss(pp[0:4], pp[12:4]);
	
	r[5:5] = __mul5_sss(pp[4:4], pp[8:4]);
	
	r[10:4] = __mul4_sss(pp[4:4], pp[12:4]);
	r[14:4] = __mul4_sss(pp[0:4], pp[8:4]);
	
	return r;
}

inline fn ge25519_p1p1_to_p3_19(stack u64[16] pp) -> stack u64[19]
	ensures #[prover=cas] {
  eqmod (
     \sum (ii \in 0:5) (pow(2, 64*ii)*u64i(result.0[ii])),
     (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[ii]))) * (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[12+ii]))),
     single((pow(2,255)) - 19)
    )
  }
	ensures #[prover=cas] {
  eqmod (
     \sum (ii \in 0:5) (pow(2, 64*ii)*u64i(result.0[5+ii])),
     (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[4+ii]))) * (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[8+ii]))),
     single((pow(2,255)) - 19)
    )
  }
	ensures #[prover=cas] {
  eqmod (
     \sum (ii \in 0:5) (pow(2, 64*ii)*u64i(result.0[10+ii])),
     (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[4+ii]))) * (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[12+ii]))),
     single((pow(2,255)) - 19)
    )
  }
  ensures #[prover=cas] {
  eqmod (
     \sum (ii \in 0:4) (pow(2, 64*ii)*u64i(result.0[15+ii])),
     (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[ii]))) * (\sum (ii \in 0:4) (pow(2, 64*ii)*u64i(pp[8+ii]))),
     single((pow(2,255)) - 19)
    )
  }
{
	stack u64[19] r; 
	
	
	r[0:5] = __mul5_sss(pp[0:4], pp[12:4]);
	
	r[5:5] = __mul5_sss(pp[4:4], pp[8:4]);
	
	r[10:5] = __mul5_sss(pp[4:4], pp[12:4]);
	r[15:4] = __mul4_sss(pp[0:4], pp[8:4]);
	
	return r;
}
