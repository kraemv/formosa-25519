require "shared_const.jinc"

require "mul4.jinc"
require "invert4.jinc"
require "fe25519_pack.jinc"
require "fe25519_freeze.jinc"

inline fn ge25519_pack(stack u64[12] pp, #msf reg u64 msf) -> reg u256, #msf reg u64
{
	reg u8 par;
	reg u256 res;
	reg u64[4] r ry rz;
	stack u64[4] rxs rzs;
	stack u8[32] rs;
	inline int i;
	#mmx reg u64 msf_s;
	
	for i=0 to 4
	{
		rz[i] = pp[8 + i];
	}
	rz, msf = __invert4(rz, msf);
  msf_s = #mov_msf(msf);
  
	rzs = #copy(rz);
	
	rxs = __mul4_ssr(pp[0:4], rz);
	ry = __mul4_rss(pp[4:4], rzs);
  
	r = __fe25519_pack(ry);
	for i=0 to 4
	{
		rs[u64 i] = r[i];
	}
	
	rxs = __freeze4_ss(rxs);
	par = rxs[u8 0];
  par = par & 1;
  par = par << 7;
  
  rs[31] ^= par;
  
  res = rs[u256 0];
  msf = #mov_msf(msf_s);
  
  return res, msf;
}
