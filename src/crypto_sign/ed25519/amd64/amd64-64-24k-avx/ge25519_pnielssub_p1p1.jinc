require "shared_const.jinc"
from formosa25519 require "crypto_sign/ed25519/amd64/common/64/add4.jinc"
from formosa25519 require "crypto_sign/ed25519/amd64/common/64/add5.jinc"
from formosa25519 require "crypto_sign/ed25519/amd64/common/64/sub4.jinc"
from formosa25519 require "crypto_sign/ed25519/amd64/common/64/sub5.jinc"
require "mul5.jinc"

inline fn ge25519_pnielssub_p1p1(stack u64[18] pp, reg ptr u64[16] qp) -> stack u64[16]
{
	reg u64[4] n4 z4;
	reg u64[5] a b c f g;
	stack u64[4] as bs n_st;
	stack u64[5] as5 es5;
	stack u64[16] t;
	reg ptr u64[4] qp_4;
	reg bool cf;
	inline int i;
	
	for i=0 to 4
	{ ?{}, z4[i] = #set0();}
	
	qp_4 = qp[12:4];
	n4 = __sub4_rrp(z4, qp_4);
	n_st = #copy(n4);
	
	for i=0 to 5
	{	a[i] = pp[5+i]; }
	
	b = #copy(a);
	as = __sub5_srs(a, pp[0:5]);
	bs = __add5_srs(b, pp[0:5]);
	
	as5 = __mul5_sss(as, qp[4:4]);
	b = __mul5_rss(bs, qp[0:4]);
	
	c = #copy(b);
	t[8:4] = __add5_srs(b, as5);
	
	t[0:4] = __sub5_srs(c, as5);
	
	es5 = __mul5_sss(pp[14:4], n_st);
	f = __mul5_rss(pp[10:4], qp[8:4]);
	
	cf, f[0] += f[0];
  for i=1 to 5
  { cf, f[i] += f[i] + cf; }
  
  g = #copy(f);
  t[4:4] = __add5_srs(f, es5);
  
  t[12:4] = __sub5_srs(g, es5);

	return t;
}
